import createWebWorkerPromise from '../core/internal/createWebWorkerPromise.js';
import InterfaceTypes from '../core/InterfaceTypes.js';
import polyDataTransferables from '../core/internal/polyDataTransferables.js';
import config from '../itkConfig.js';
async function polyDataToMesh(webWorker, polyData) {
    let worker = webWorker;
    const { webworkerPromise, worker: usedWorker } = await createWebWorkerPromise(worker);
    worker = usedWorker;
    const args = ['0', '0', '--memory-io'];
    const outputs = [
        { type: InterfaceTypes.Mesh }
    ];
    const inputs = [
        { type: InterfaceTypes.PolyData, data: polyData }
    ];
    const transferables = polyDataTransferables(polyData);
    const result = await webworkerPromise.postMessage({
        operation: 'polyDataToMesh',
        config: config,
        pipelinePath: 'PolyDataToMesh',
        args,
        outputs,
        inputs
    }, transferables);
    return { mesh: result.outputs[0].data, webWorker: worker };
}
export default polyDataToMesh;
//# sourceMappingURL=polyDataToMesh.js.map