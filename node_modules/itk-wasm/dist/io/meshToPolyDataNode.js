import path from 'path';
import findLocalMeshIOPath from './internal/findLocalMeshIOPath.js';
import InterfaceTypes from '../core/InterfaceTypes.js';
import loadEmscriptenModule from './../core/internal/loadEmscriptenModuleNode.js';
import runPipelineEmscripten from '../pipeline/internal/runPipelineEmscripten.js';
async function meshToPolyDataNode(mesh) {
    const meshIOsPath = findLocalMeshIOPath();
    const args = ['0', '0', '--memory-io'];
    const desiredOutputs = [
        { type: InterfaceTypes.PolyData }
    ];
    const inputs = [
        { type: InterfaceTypes.Mesh, data: mesh }
    ];
    const modulePath = path.join(meshIOsPath, 'MeshToPolyData.js');
    const emModule = await loadEmscriptenModule(modulePath);
    const { outputs } = runPipelineEmscripten(emModule, args, desiredOutputs, inputs);
    return outputs[0].data;
}
export default meshToPolyDataNode;
//# sourceMappingURL=meshToPolyDataNode.js.map