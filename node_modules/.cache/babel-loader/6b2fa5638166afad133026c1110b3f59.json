{"ast":null,"code":"import _objectSpread from \"/home/kv/Desktop/Nikhil/VolView-4.0.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport macro from '@kitware/vtk.js/macro';\nimport vtkAbstractWidgetFactory from '@kitware/vtk.js/Widgets/Core/AbstractWidgetFactory';\nimport vtkPlanePointManipulator from '@kitware/vtk.js/Widgets/Manipulators/PlaneManipulator';\nimport vtkSphereHandleRepresentation from '@kitware/vtk.js/Widgets/Representations/SphereHandleRepresentation';\nimport { distance2BetweenPoints } from '@kitware/vtk.js/Common/Core/Math';\nimport widgetBehavior from './behavior';\nimport stateGenerator from './state';\nexport { shouldIgnoreEvent } from './behavior'; // ----------------------------------------------------------------------------\n// Factory\n// ----------------------------------------------------------------------------\n\nfunction vtkRulerWidget(publicAPI, model) {\n  model.classHierarchy.push('vtkRulerWidget'); // --- Widget Requirement ---------------------------------------------------\n  // model.methodsToLink = [\n  //   'activeScaleFactor',\n  //   'activeColor',\n  //   'useActiveColor',\n  //   'glyphResolution',\n  //   'defaultScale',\n  //   'text',\n  //   'textStateIndex',\n  // ];\n\n  publicAPI.getRepresentationsForViewType = function () {\n    return [{\n      builder: vtkSphereHandleRepresentation,\n      labels: ['points'],\n      initialValues: {\n        scaleInPixels: true\n      }\n    }];\n  };\n\n  publicAPI.getLength = function () {\n    var first = model.widgetState.getFirstPoint().getOrigin();\n    var second = model.widgetState.getSecondPoint().getOrigin();\n\n    if (!first || !second) {\n      return 0;\n    }\n\n    return Math.sqrt(distance2BetweenPoints(first, second));\n  }; // Default manipulator\n\n\n  model.manipulator = vtkPlanePointManipulator.newInstance();\n} // ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkAbstractWidgetFactory.extend(publicAPI, model, _objectSpread(_objectSpread({}, initialValues), {}, {\n    behavior: widgetBehavior,\n    widgetState: stateGenerator()\n  }));\n  macro.get(publicAPI, model, ['manipulator']);\n  vtkRulerWidget(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport var newInstance = macro.newInstance(extend, 'vtkRulerWidget'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance: newInstance,\n  extend: extend\n};","map":{"version":3,"names":["macro","vtkAbstractWidgetFactory","vtkPlanePointManipulator","vtkSphereHandleRepresentation","distance2BetweenPoints","widgetBehavior","stateGenerator","shouldIgnoreEvent","vtkRulerWidget","publicAPI","model","classHierarchy","push","getRepresentationsForViewType","builder","labels","initialValues","scaleInPixels","getLength","first","widgetState","getFirstPoint","getOrigin","second","getSecondPoint","Math","sqrt","manipulator","newInstance","DEFAULT_VALUES","extend","Object","assign","behavior","get"],"sources":["/home/kv/Desktop/Nikhil/VolView-4.0.0/src/vtk/RulerWidget/index.js"],"sourcesContent":["import macro from '@kitware/vtk.js/macro';\nimport vtkAbstractWidgetFactory from '@kitware/vtk.js/Widgets/Core/AbstractWidgetFactory';\nimport vtkPlanePointManipulator from '@kitware/vtk.js/Widgets/Manipulators/PlaneManipulator';\nimport vtkSphereHandleRepresentation from '@kitware/vtk.js/Widgets/Representations/SphereHandleRepresentation';\nimport { distance2BetweenPoints } from '@kitware/vtk.js/Common/Core/Math';\n\nimport widgetBehavior from './behavior';\nimport stateGenerator from './state';\n\nexport { shouldIgnoreEvent } from './behavior';\n\n// ----------------------------------------------------------------------------\n// Factory\n// ----------------------------------------------------------------------------\n\nfunction vtkRulerWidget(publicAPI, model) {\n  model.classHierarchy.push('vtkRulerWidget');\n\n  // --- Widget Requirement ---------------------------------------------------\n\n  // model.methodsToLink = [\n  //   'activeScaleFactor',\n  //   'activeColor',\n  //   'useActiveColor',\n  //   'glyphResolution',\n  //   'defaultScale',\n  //   'text',\n  //   'textStateIndex',\n  // ];\n\n  publicAPI.getRepresentationsForViewType = () => [\n    {\n      builder: vtkSphereHandleRepresentation,\n      labels: ['points'],\n      initialValues: {\n        scaleInPixels: true,\n      },\n    },\n  ];\n\n  publicAPI.getLength = () => {\n    const first = model.widgetState.getFirstPoint().getOrigin();\n    const second = model.widgetState.getSecondPoint().getOrigin();\n    if (!first || !second) {\n      return 0;\n    }\n    return Math.sqrt(distance2BetweenPoints(first, second));\n  };\n\n  // Default manipulator\n  model.manipulator = vtkPlanePointManipulator.newInstance();\n}\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkAbstractWidgetFactory.extend(publicAPI, model, {\n    ...initialValues,\n    behavior: widgetBehavior,\n    widgetState: stateGenerator(),\n  });\n  macro.get(publicAPI, model, ['manipulator']);\n\n  vtkRulerWidget(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkRulerWidget');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,uBAAlB;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAOC,wBAAP,MAAqC,uDAArC;AACA,OAAOC,6BAAP,MAA0C,oEAA1C;AACA,SAASC,sBAAT,QAAuC,kCAAvC;AAEA,OAAOC,cAAP,MAA2B,YAA3B;AACA,OAAOC,cAAP,MAA2B,SAA3B;AAEA,SAASC,iBAAT,QAAkC,YAAlC,C,CAEA;AACA;AACA;;AAEA,SAASC,cAAT,CAAwBC,SAAxB,EAAmCC,KAAnC,EAA0C;EACxCA,KAAK,CAACC,cAAN,CAAqBC,IAArB,CAA0B,gBAA1B,EADwC,CAGxC;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAH,SAAS,CAACI,6BAAV,GAA0C;IAAA,OAAM,CAC9C;MACEC,OAAO,EAAEX,6BADX;MAEEY,MAAM,EAAE,CAAC,QAAD,CAFV;MAGEC,aAAa,EAAE;QACbC,aAAa,EAAE;MADF;IAHjB,CAD8C,CAAN;EAAA,CAA1C;;EAUAR,SAAS,CAACS,SAAV,GAAsB,YAAM;IAC1B,IAAMC,KAAK,GAAGT,KAAK,CAACU,WAAN,CAAkBC,aAAlB,GAAkCC,SAAlC,EAAd;IACA,IAAMC,MAAM,GAAGb,KAAK,CAACU,WAAN,CAAkBI,cAAlB,GAAmCF,SAAnC,EAAf;;IACA,IAAI,CAACH,KAAD,IAAU,CAACI,MAAf,EAAuB;MACrB,OAAO,CAAP;IACD;;IACD,OAAOE,IAAI,CAACC,IAAL,CAAUtB,sBAAsB,CAACe,KAAD,EAAQI,MAAR,CAAhC,CAAP;EACD,CAPD,CAzBwC,CAkCxC;;;EACAb,KAAK,CAACiB,WAAN,GAAoBzB,wBAAwB,CAAC0B,WAAzB,EAApB;AACD,C,CAED;;;AAEA,IAAMC,cAAc,GAAG,EAAvB,C,CAEA;;AAEA,OAAO,SAASC,MAAT,CAAgBrB,SAAhB,EAA2BC,KAA3B,EAAsD;EAAA,IAApBM,aAAoB,uEAAJ,EAAI;EAC3De,MAAM,CAACC,MAAP,CAActB,KAAd,EAAqBmB,cAArB,EAAqCb,aAArC;EAEAf,wBAAwB,CAAC6B,MAAzB,CAAgCrB,SAAhC,EAA2CC,KAA3C,kCACKM,aADL;IAEEiB,QAAQ,EAAE5B,cAFZ;IAGEe,WAAW,EAAEd,cAAc;EAH7B;EAKAN,KAAK,CAACkC,GAAN,CAAUzB,SAAV,EAAqBC,KAArB,EAA4B,CAAC,aAAD,CAA5B;EAEAF,cAAc,CAACC,SAAD,EAAYC,KAAZ,CAAd;AACD,C,CAED;;AAEA,OAAO,IAAMkB,WAAW,GAAG5B,KAAK,CAAC4B,WAAN,CAAkBE,MAAlB,EAA0B,gBAA1B,CAApB,C,CAEP;;AAEA,eAAe;EAAEF,WAAW,EAAXA,WAAF;EAAeE,MAAM,EAANA;AAAf,CAAf"},"metadata":{},"sourceType":"module"}