{"ast":null,"code":"import _objectSpread from \"/home/kv/Desktop/Nikhil/VolView-4.0.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport macro from '@kitware/vtk.js/macro';\nimport vtkAbstractWidgetFactory from '@kitware/vtk.js/Widgets/Core/AbstractWidgetFactory';\nimport vtkPlanePointManipulator from '@kitware/vtk.js/Widgets/Manipulators/PlaneManipulator';\nimport vtkPaintBrushContextRepresentation from '@/src/vtk/PaintBrushContextRepresentation';\nimport widgetBehavior from './behavior';\nimport stateGenerator from './state';\nexport { shouldIgnoreEvent } from './behavior'; // ----------------------------------------------------------------------------\n// Factory\n// ----------------------------------------------------------------------------\n\nfunction vtkPaintWidget(publicAPI, model) {\n  model.classHierarchy.push('vtkPaintWidget');\n  model.methodsToLink = ['slicingIndex', 'indexToWorld', 'worldToIndex', 'imageSpacing'];\n\n  publicAPI.getRepresentationsForViewType = function () {\n    return [{\n      builder: vtkPaintBrushContextRepresentation,\n      labels: ['brush']\n    }];\n  }; // Default manipulator\n\n\n  model.manipulator = vtkPlanePointManipulator.newInstance();\n} // ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkAbstractWidgetFactory.extend(publicAPI, model, _objectSpread(_objectSpread({}, initialValues), {}, {\n    behavior: widgetBehavior,\n    widgetState: stateGenerator()\n  }));\n  macro.get(publicAPI, model, ['manipulator']);\n  vtkPaintWidget(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport var newInstance = macro.newInstance(extend, 'vtkPaintWidget'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance: newInstance,\n  extend: extend\n};","map":{"version":3,"names":["macro","vtkAbstractWidgetFactory","vtkPlanePointManipulator","vtkPaintBrushContextRepresentation","widgetBehavior","stateGenerator","shouldIgnoreEvent","vtkPaintWidget","publicAPI","model","classHierarchy","push","methodsToLink","getRepresentationsForViewType","builder","labels","manipulator","newInstance","DEFAULT_VALUES","extend","initialValues","Object","assign","behavior","widgetState","get"],"sources":["/home/kv/Desktop/Nikhil/VolView-4.0.0/src/vtk/PaintWidget/index.js"],"sourcesContent":["import macro from '@kitware/vtk.js/macro';\nimport vtkAbstractWidgetFactory from '@kitware/vtk.js/Widgets/Core/AbstractWidgetFactory';\nimport vtkPlanePointManipulator from '@kitware/vtk.js/Widgets/Manipulators/PlaneManipulator';\nimport vtkPaintBrushContextRepresentation from '@/src/vtk/PaintBrushContextRepresentation';\n\nimport widgetBehavior from './behavior';\nimport stateGenerator from './state';\n\nexport { shouldIgnoreEvent } from './behavior';\n\n// ----------------------------------------------------------------------------\n// Factory\n// ----------------------------------------------------------------------------\n\nfunction vtkPaintWidget(publicAPI, model) {\n  model.classHierarchy.push('vtkPaintWidget');\n\n  model.methodsToLink = [\n    'slicingIndex',\n    'indexToWorld',\n    'worldToIndex',\n    'imageSpacing',\n  ];\n\n  publicAPI.getRepresentationsForViewType = () => [\n    {\n      builder: vtkPaintBrushContextRepresentation,\n      labels: ['brush'],\n    },\n  ];\n\n  // Default manipulator\n  model.manipulator = vtkPlanePointManipulator.newInstance();\n}\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkAbstractWidgetFactory.extend(publicAPI, model, {\n    ...initialValues,\n    behavior: widgetBehavior,\n    widgetState: stateGenerator(),\n  });\n  macro.get(publicAPI, model, ['manipulator']);\n\n  vtkPaintWidget(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPaintWidget');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,uBAAlB;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAOC,wBAAP,MAAqC,uDAArC;AACA,OAAOC,kCAAP,MAA+C,2CAA/C;AAEA,OAAOC,cAAP,MAA2B,YAA3B;AACA,OAAOC,cAAP,MAA2B,SAA3B;AAEA,SAASC,iBAAT,QAAkC,YAAlC,C,CAEA;AACA;AACA;;AAEA,SAASC,cAAT,CAAwBC,SAAxB,EAAmCC,KAAnC,EAA0C;EACxCA,KAAK,CAACC,cAAN,CAAqBC,IAArB,CAA0B,gBAA1B;EAEAF,KAAK,CAACG,aAAN,GAAsB,CACpB,cADoB,EAEpB,cAFoB,EAGpB,cAHoB,EAIpB,cAJoB,CAAtB;;EAOAJ,SAAS,CAACK,6BAAV,GAA0C;IAAA,OAAM,CAC9C;MACEC,OAAO,EAAEX,kCADX;MAEEY,MAAM,EAAE,CAAC,OAAD;IAFV,CAD8C,CAAN;EAAA,CAA1C,CAVwC,CAiBxC;;;EACAN,KAAK,CAACO,WAAN,GAAoBd,wBAAwB,CAACe,WAAzB,EAApB;AACD,C,CAED;;;AAEA,IAAMC,cAAc,GAAG,EAAvB,C,CAEA;;AAEA,OAAO,SAASC,MAAT,CAAgBX,SAAhB,EAA2BC,KAA3B,EAAsD;EAAA,IAApBW,aAAoB,uEAAJ,EAAI;EAC3DC,MAAM,CAACC,MAAP,CAAcb,KAAd,EAAqBS,cAArB,EAAqCE,aAArC;EAEAnB,wBAAwB,CAACkB,MAAzB,CAAgCX,SAAhC,EAA2CC,KAA3C,kCACKW,aADL;IAEEG,QAAQ,EAAEnB,cAFZ;IAGEoB,WAAW,EAAEnB,cAAc;EAH7B;EAKAL,KAAK,CAACyB,GAAN,CAAUjB,SAAV,EAAqBC,KAArB,EAA4B,CAAC,aAAD,CAA5B;EAEAF,cAAc,CAACC,SAAD,EAAYC,KAAZ,CAAd;AACD,C,CAED;;AAEA,OAAO,IAAMQ,WAAW,GAAGjB,KAAK,CAACiB,WAAN,CAAkBE,MAAlB,EAA0B,gBAA1B,CAApB,C,CAEP;;AAEA,eAAe;EAAEF,WAAW,EAAXA,WAAF;EAAeE,MAAM,EAANA;AAAf,CAAf"},"metadata":{},"sourceType":"module"}