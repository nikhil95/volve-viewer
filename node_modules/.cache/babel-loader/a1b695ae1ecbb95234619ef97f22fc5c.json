{"ast":null,"code":"import _objectSpread from \"/home/kv/Desktop/Nikhil/VolView-4.0.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/kv/Desktop/Nikhil/VolView-4.0.0/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.math.sign.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport macro from '@kitware/vtk.js/macro';\nimport vtkPiecewiseGaussianWidget from '@kitware/vtk.js/Interaction/Widgets/PiecewiseGaussianWidget';\nexport var Mode = {\n  Gaussians: 1,\n  Points: 2\n};\nexport var ADJUST_POSITION_CURSOR = '-webkit-grab';\n/**\n * Samples a piecewise linear function at regular intervals in [0,1].\n * The first and last values are set to zero, since the output\n * is used for vtkPiecewiseGaussianWidget.drawChart().\n *\n * Assumes normalized x/y coordinate points.\n */\n\nexport function samplePiecewiseLinear(points) {\n  var shift = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var samples = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 256;\n\n  var filledPoints = _toConsumableArray(points); // set endpoints to drop to 0\n\n\n  filledPoints.push([points[0][0], 0]);\n  filledPoints.push([points[points.length - 1][0], 0]);\n  var sampledPoints = [];\n  var pi = 0;\n  var p1 = filledPoints[0]; // left\n\n  var p2 = filledPoints[1]; // right\n\n  var slope = (p2[1] - p1[1]) / (p2[0] - p1[0]);\n\n  for (var i = 0; i < samples; i += 1) {\n    var sx = i / (samples - 1) - shift; // sample x\n\n    if (i < samples - 1) {\n      while (sx > p2[0] && pi < filledPoints.length - 2) {\n        pi += 1; // extraneous work if this loop goes over more than once,\n        // which only happens if sx > 0 on first iteration (aka shift < 0)\n\n        p1 = filledPoints[pi];\n        p2 = filledPoints[pi + 1];\n\n        if (Math.abs(p2[0] - p1[0]) < 1e-8) {\n          slope = Infinity * Math.sign(p2[1] - p1[1]);\n        } else {\n          slope = (p2[1] - p1[1]) / (p2[0] - p1[0]);\n        }\n      }\n\n      if (slope === Infinity) {\n        sampledPoints.push(1);\n      } else if (slope === -Infinity) {\n        sampledPoints.push(0);\n      } else {\n        sampledPoints.push(slope * (sx - p1[0]) + p1[1]);\n      }\n    }\n  }\n\n  return sampledPoints;\n} // ----------------------------------------------------------------------------\n// vtkPiecewiseWidget methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPiecewiseWidget(publicAPI, model) {\n  model.classHierarchy.push('vtkPiecewiseWidget');\n\n  var superClass = _objectSpread({}, publicAPI);\n\n  model.pwMode = Mode.Gaussians;\n  model.opacityPoints = [];\n  model.opacityPointShift = 0;\n\n  publicAPI.setGaussiansMode = function () {\n    model.pwMode = Mode.Gaussians;\n  };\n\n  publicAPI.setPointsMode = function () {\n    // clear gaussians so we don't keep this ref around\n    model.gaussians = [];\n    model.pwMode = Mode.Points;\n  };\n\n  publicAPI.isModeGaussians = function () {\n    return model.pwMode === Mode.Gaussians;\n  };\n\n  publicAPI.isModePoints = function () {\n    return model.pwMode === Mode.Points;\n  };\n\n  publicAPI.getMode = function () {\n    return model.pwMode;\n  };\n\n  publicAPI.shiftPosition = function (coords, meta) {\n    model.opacityPointShift = meta.originalOpacityPointShift + coords[0] - meta.originalXY[0];\n    return true;\n  };\n\n  publicAPI.onHover = function (x, y) {\n    if (publicAPI.isModeGaussians()) {\n      return superClass.onHover(x, y);\n    }\n\n    model.canvas.style.cursor = ADJUST_POSITION_CURSOR;\n    return true;\n  };\n\n  publicAPI.onClick = function (x, y) {\n    if (publicAPI.isModeGaussians()) {\n      return superClass.onClick(x, y);\n    }\n\n    return undefined;\n  };\n\n  publicAPI.onDown = function (x, y) {\n    if (publicAPI.isModeGaussians()) {\n      return superClass.onDown(x, y);\n    }\n\n    if (!model.mouseIsDown) {\n      publicAPI.invokeAnimation(true);\n    }\n\n    var mouseCoords = vtkPiecewiseGaussianWidget.normalizeCoordinates(x, y, model.graphArea);\n    model.mouseIsDown = true;\n    model.activeGaussian = -1;\n    model.dragAction = {\n      originalXY: mouseCoords,\n      originalOpacityPointShift: model.opacityPointShift\n    };\n    return true;\n  };\n\n  publicAPI.onDrag = function (x, y) {\n    if (publicAPI.isModeGaussians()) {\n      return superClass.onDrag(x, y);\n    }\n\n    var normCoords = vtkPiecewiseGaussianWidget.normalizeCoordinates(x, y, model.graphArea);\n\n    if (publicAPI.shiftPosition(normCoords, model.dragAction)) {\n      model.opacities = samplePiecewiseLinear(model.opacityPoints, model.opacityPointShift);\n      publicAPI.invokeOpacityChange(publicAPI, true);\n    }\n\n    publicAPI.modified();\n    return true;\n  };\n\n  publicAPI.setOpacityPoints = function (points) {\n    var shift = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (publicAPI.isModePoints()) {\n      // deep copy\n      model.opacityPoints = points.map(function (p) {\n        return [p[0], p[1]];\n      });\n      model.opacityPointShift = shift;\n      model.opacities = samplePiecewiseLinear(model.opacityPoints, model.opacityPointShift);\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.getEffectiveOpacityPoints = function () {\n    return model.opacityPoints.map(function (p) {\n      return [p[0] + model.opacityPointShift, p[1]];\n    });\n  };\n\n  publicAPI.render = function () {\n    if (publicAPI.isModePoints()) {\n      model.activeGaussian = -1;\n      model.selectedGaussian = -1;\n    }\n\n    superClass.render();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkPiecewiseGaussianWidget.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['opacityPoints', 'opacityPointShift']); // Object specific methods\n\n  vtkPiecewiseWidget(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport var newInstance = macro.newInstance(extend, 'vtkPiecewiseWidget'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance: newInstance,\n  extend: extend\n};","map":{"version":3,"names":["macro","vtkPiecewiseGaussianWidget","Mode","Gaussians","Points","ADJUST_POSITION_CURSOR","samplePiecewiseLinear","points","shift","samples","filledPoints","push","length","sampledPoints","pi","p1","p2","slope","i","sx","Math","abs","Infinity","sign","vtkPiecewiseWidget","publicAPI","model","classHierarchy","superClass","pwMode","opacityPoints","opacityPointShift","setGaussiansMode","setPointsMode","gaussians","isModeGaussians","isModePoints","getMode","shiftPosition","coords","meta","originalOpacityPointShift","originalXY","onHover","x","y","canvas","style","cursor","onClick","undefined","onDown","mouseIsDown","invokeAnimation","mouseCoords","normalizeCoordinates","graphArea","activeGaussian","dragAction","onDrag","normCoords","opacities","invokeOpacityChange","modified","setOpacityPoints","map","p","getEffectiveOpacityPoints","render","selectedGaussian","DEFAULT_VALUES","extend","initialValues","Object","assign","setGet","newInstance"],"sources":["/home/kv/Desktop/Nikhil/VolView-4.0.0/src/vtk/PiecewiseWidget/index.js"],"sourcesContent":["import macro from '@kitware/vtk.js/macro';\nimport vtkPiecewiseGaussianWidget from '@kitware/vtk.js/Interaction/Widgets/PiecewiseGaussianWidget';\n\nexport const Mode = {\n  Gaussians: 1,\n  Points: 2,\n};\n\nexport const ADJUST_POSITION_CURSOR = '-webkit-grab';\n\n/**\n * Samples a piecewise linear function at regular intervals in [0,1].\n * The first and last values are set to zero, since the output\n * is used for vtkPiecewiseGaussianWidget.drawChart().\n *\n * Assumes normalized x/y coordinate points.\n */\n\nexport function samplePiecewiseLinear(points, shift = 0, samples = 256) {\n  const filledPoints = [...points];\n  // set endpoints to drop to 0\n  filledPoints.push([points[0][0], 0]);\n  filledPoints.push([points[points.length - 1][0], 0]);\n\n  const sampledPoints = [];\n  let pi = 0;\n  let p1 = filledPoints[0]; // left\n  let p2 = filledPoints[1]; // right\n  let slope = (p2[1] - p1[1]) / (p2[0] - p1[0]);\n  for (let i = 0; i < samples; i += 1) {\n    const sx = i / (samples - 1) - shift; // sample x\n    if (i < samples - 1) {\n      while (sx > p2[0] && pi < filledPoints.length - 2) {\n        pi += 1;\n        // extraneous work if this loop goes over more than once,\n        // which only happens if sx > 0 on first iteration (aka shift < 0)\n        p1 = filledPoints[pi];\n        p2 = filledPoints[pi + 1];\n        if (Math.abs(p2[0] - p1[0]) < 1e-8) {\n          slope = Infinity * Math.sign(p2[1] - p1[1]);\n        } else {\n          slope = (p2[1] - p1[1]) / (p2[0] - p1[0]);\n        }\n      }\n      if (slope === Infinity) {\n        sampledPoints.push(1);\n      } else if (slope === -Infinity) {\n        sampledPoints.push(0);\n      } else {\n        sampledPoints.push(slope * (sx - p1[0]) + p1[1]);\n      }\n    }\n  }\n  return sampledPoints;\n}\n\n// ----------------------------------------------------------------------------\n// vtkPiecewiseWidget methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPiecewiseWidget(publicAPI, model) {\n  model.classHierarchy.push('vtkPiecewiseWidget');\n\n  const superClass = { ...publicAPI };\n\n  model.pwMode = Mode.Gaussians;\n  model.opacityPoints = [];\n  model.opacityPointShift = 0;\n\n  publicAPI.setGaussiansMode = () => {\n    model.pwMode = Mode.Gaussians;\n  };\n\n  publicAPI.setPointsMode = () => {\n    // clear gaussians so we don't keep this ref around\n    model.gaussians = [];\n    model.pwMode = Mode.Points;\n  };\n\n  publicAPI.isModeGaussians = () => model.pwMode === Mode.Gaussians;\n  publicAPI.isModePoints = () => model.pwMode === Mode.Points;\n  publicAPI.getMode = () => model.pwMode;\n\n  publicAPI.shiftPosition = (coords, meta) => {\n    model.opacityPointShift =\n      meta.originalOpacityPointShift + coords[0] - meta.originalXY[0];\n    return true;\n  };\n\n  publicAPI.onHover = (x, y) => {\n    if (publicAPI.isModeGaussians()) {\n      return superClass.onHover(x, y);\n    }\n    model.canvas.style.cursor = ADJUST_POSITION_CURSOR;\n    return true;\n  };\n\n  publicAPI.onClick = (x, y) => {\n    if (publicAPI.isModeGaussians()) {\n      return superClass.onClick(x, y);\n    }\n    return undefined;\n  };\n\n  publicAPI.onDown = (x, y) => {\n    if (publicAPI.isModeGaussians()) {\n      return superClass.onDown(x, y);\n    }\n\n    if (!model.mouseIsDown) {\n      publicAPI.invokeAnimation(true);\n    }\n\n    const mouseCoords = vtkPiecewiseGaussianWidget.normalizeCoordinates(\n      x,\n      y,\n      model.graphArea\n    );\n\n    model.mouseIsDown = true;\n    model.activeGaussian = -1;\n    model.dragAction = {\n      originalXY: mouseCoords,\n      originalOpacityPointShift: model.opacityPointShift,\n    };\n\n    return true;\n  };\n\n  publicAPI.onDrag = (x, y) => {\n    if (publicAPI.isModeGaussians()) {\n      return superClass.onDrag(x, y);\n    }\n\n    const normCoords = vtkPiecewiseGaussianWidget.normalizeCoordinates(\n      x,\n      y,\n      model.graphArea\n    );\n    if (publicAPI.shiftPosition(normCoords, model.dragAction)) {\n      model.opacities = samplePiecewiseLinear(\n        model.opacityPoints,\n        model.opacityPointShift\n      );\n      publicAPI.invokeOpacityChange(publicAPI, true);\n    }\n\n    publicAPI.modified();\n    return true;\n  };\n\n  publicAPI.setOpacityPoints = (points, shift = 0) => {\n    if (publicAPI.isModePoints()) {\n      // deep copy\n      model.opacityPoints = points.map((p) => [p[0], p[1]]);\n      model.opacityPointShift = shift;\n\n      model.opacities = samplePiecewiseLinear(\n        model.opacityPoints,\n        model.opacityPointShift\n      );\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.getEffectiveOpacityPoints = () =>\n    model.opacityPoints.map((p) => [p[0] + model.opacityPointShift, p[1]]);\n\n  publicAPI.render = () => {\n    if (publicAPI.isModePoints()) {\n      model.activeGaussian = -1;\n      model.selectedGaussian = -1;\n    }\n    superClass.render();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkPiecewiseGaussianWidget.extend(publicAPI, model, initialValues);\n\n  macro.setGet(publicAPI, model, ['opacityPoints', 'opacityPointShift']);\n\n  // Object specific methods\n  vtkPiecewiseWidget(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPiecewiseWidget');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}