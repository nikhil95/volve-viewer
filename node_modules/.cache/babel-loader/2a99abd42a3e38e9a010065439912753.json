{"ast":null,"code":"import _objectSpread from \"/home/kv/Desktop/Nikhil/VolView-4.0.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport macro from '@kitware/vtk.js/macro';\nimport vtkSliceRepresentationProxy from '@kitware/vtk.js/Proxy/Representations/SliceRepresentationProxy';\nvar SLICE_MODE_MAP = {\n  X: 'I',\n  Y: 'J',\n  Z: 'K',\n  I: 'I',\n  J: 'J',\n  K: 'K'\n};\n\nfunction vtkIJKSliceRepresentationProxy(publicAPI, model) {\n  model.classHierarchy.push('vtkIJKSliceRepresentationProxy');\n\n  var superClass = _objectSpread({}, publicAPI); // don't set colors on slices\n\n\n  publicAPI.setColorBy = function () {}; // pretend XYZ slicing is actually just IJK.\n\n\n  publicAPI.setSlicingMode = function (modeString) {\n    return superClass.setSlicingMode(SLICE_MODE_MAP[modeString]);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  vtkSliceRepresentationProxy.extend(publicAPI, model);\n  macro.proxyPropertyMapping(publicAPI, model, {\n    opacity: {\n      modelKey: 'property',\n      property: 'opacity'\n    }\n  }); // Object specific methods\n\n  vtkIJKSliceRepresentationProxy(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nexport var newInstance = macro.newInstance(extend, 'vtkIJKSliceRepresentationProxy'); // ----------------------------------------------------------------------------\n\nexport default {\n  newInstance: newInstance,\n  extend: extend\n};","map":{"version":3,"names":["macro","vtkSliceRepresentationProxy","SLICE_MODE_MAP","X","Y","Z","I","J","K","vtkIJKSliceRepresentationProxy","publicAPI","model","classHierarchy","push","superClass","setColorBy","setSlicingMode","modeString","DEFAULT_VALUES","extend","initialValues","Object","assign","proxyPropertyMapping","opacity","modelKey","property","newInstance"],"sources":["/home/kv/Desktop/Nikhil/VolView-4.0.0/src/vtk/IJKSliceRepresentationProxy/index.js"],"sourcesContent":["import macro from '@kitware/vtk.js/macro';\n\nimport vtkSliceRepresentationProxy from '@kitware/vtk.js/Proxy/Representations/SliceRepresentationProxy';\n\nconst SLICE_MODE_MAP = {\n  X: 'I',\n  Y: 'J',\n  Z: 'K',\n  I: 'I',\n  J: 'J',\n  K: 'K',\n};\n\nfunction vtkIJKSliceRepresentationProxy(publicAPI, model) {\n  model.classHierarchy.push('vtkIJKSliceRepresentationProxy');\n\n  const superClass = { ...publicAPI };\n\n  // don't set colors on slices\n  publicAPI.setColorBy = () => {};\n\n  // pretend XYZ slicing is actually just IJK.\n  publicAPI.setSlicingMode = (modeString) => {\n    return superClass.setSlicingMode(SLICE_MODE_MAP[modeString]);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  vtkSliceRepresentationProxy.extend(publicAPI, model);\n\n  macro.proxyPropertyMapping(publicAPI, model, {\n    opacity: { modelKey: 'property', property: 'opacity' },\n  });\n\n  // Object specific methods\n  vtkIJKSliceRepresentationProxy(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkIJKSliceRepresentationProxy'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,2BAAP,MAAwC,gEAAxC;AAEA,IAAMC,cAAc,GAAG;EACrBC,CAAC,EAAE,GADkB;EAErBC,CAAC,EAAE,GAFkB;EAGrBC,CAAC,EAAE,GAHkB;EAIrBC,CAAC,EAAE,GAJkB;EAKrBC,CAAC,EAAE,GALkB;EAMrBC,CAAC,EAAE;AANkB,CAAvB;;AASA,SAASC,8BAAT,CAAwCC,SAAxC,EAAmDC,KAAnD,EAA0D;EACxDA,KAAK,CAACC,cAAN,CAAqBC,IAArB,CAA0B,gCAA1B;;EAEA,IAAMC,UAAU,qBAAQJ,SAAR,CAAhB,CAHwD,CAKxD;;;EACAA,SAAS,CAACK,UAAV,GAAuB,YAAM,CAAE,CAA/B,CANwD,CAQxD;;;EACAL,SAAS,CAACM,cAAV,GAA2B,UAACC,UAAD,EAAgB;IACzC,OAAOH,UAAU,CAACE,cAAX,CAA0Bd,cAAc,CAACe,UAAD,CAAxC,CAAP;EACD,CAFD;AAGD,C,CAED;AACA;AACA;;;AAEA,IAAMC,cAAc,GAAG,EAAvB,C,CAEA;;AAEA,OAAO,SAASC,MAAT,CAAgBT,SAAhB,EAA2BC,KAA3B,EAAsD;EAAA,IAApBS,aAAoB,uEAAJ,EAAI;EAC3DC,MAAM,CAACC,MAAP,CAAcX,KAAd,EAAqBO,cAArB,EAAqCE,aAArC,EAD2D,CAG3D;;EACAnB,2BAA2B,CAACkB,MAA5B,CAAmCT,SAAnC,EAA8CC,KAA9C;EAEAX,KAAK,CAACuB,oBAAN,CAA2Bb,SAA3B,EAAsCC,KAAtC,EAA6C;IAC3Ca,OAAO,EAAE;MAAEC,QAAQ,EAAE,UAAZ;MAAwBC,QAAQ,EAAE;IAAlC;EADkC,CAA7C,EAN2D,CAU3D;;EACAjB,8BAA8B,CAACC,SAAD,EAAYC,KAAZ,CAA9B;AACD,C,CAED;;AAEA,OAAO,IAAMgB,WAAW,GAAG3B,KAAK,CAAC2B,WAAN,CACzBR,MADyB,EAEzB,gCAFyB,CAApB,C,CAKP;;AAEA,eAAe;EAAEQ,WAAW,EAAXA,WAAF;EAAeR,MAAM,EAANA;AAAf,CAAf"},"metadata":{},"sourceType":"module"}