{"ast":null,"code":"import _objectSpread from \"/home/kv/Desktop/Nikhil/VolView-4.0.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/kv/Desktop/Nikhil/VolView-4.0.0/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/kv/Desktop/Nikhil/VolView-4.0.0/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport { VRangeSlider } from 'vuetify/lib';\nvar DEFAULT_TRACK_COLOR = 'rgba(128, 128, 128, 0.2)';\nvar CLASS_COLOR_FUNCTION = 'volview__color-function';\nvar CLASS_COLOR_FUNCTION_MIDDLE = \"\".concat(CLASS_COLOR_FUNCTION, \"_middle\");\nexport default VRangeSlider.extend({\n  name: 'color-function-slider',\n  props: {\n    rgbPoints: Array,\n    range: Array\n  },\n  computed: {\n    startBackgroundColor: function startBackgroundColor() {\n      if (!this.rgbPoints) {\n        return DEFAULT_TRACK_COLOR;\n      }\n\n      var _this$rgbPoints$slice = this.rgbPoints.slice(1, 4).map(function (c) {\n        return c * 255;\n      }),\n          _this$rgbPoints$slice2 = _slicedToArray(_this$rgbPoints$slice, 3),\n          r = _this$rgbPoints$slice2[0],\n          g = _this$rgbPoints$slice2[1],\n          b = _this$rgbPoints$slice2[2];\n\n      return \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n    },\n    filledBackgroundColor: function filledBackgroundColor() {\n      if (!this.rgbPoints) {\n        return DEFAULT_TRACK_COLOR;\n      }\n\n      var rangeMax = this.rgbPoints[this.rgbPoints.length - 4];\n      var rangeMin = this.rgbPoints[0];\n      var width = rangeMax - rangeMin;\n      var colorStops = [];\n\n      for (var i = 0; i < this.rgbPoints.length; i += 4) {\n        var r = this.rgbPoints[i + 1] * 255,\n            g = this.rgbPoints[i + 2] * 255,\n            b = this.rgbPoints[i + 3] * 255;\n        var stop = (this.rgbPoints[i] - rangeMin) / width * 100; // in percent\n\n        colorStops.push(\"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \") \").concat(stop.toFixed(2), \"%\"));\n      }\n\n      return \"linear-gradient(to right, \".concat(colorStops.join(', '), \")\");\n    },\n    endBackgroundColor: function endBackgroundColor() {\n      if (!this.rgbPoints) {\n        return DEFAULT_TRACK_COLOR;\n      }\n\n      var end = this.rgbPoints.length;\n\n      var _this$rgbPoints$slice3 = this.rgbPoints.slice(end - 3).map(function (c) {\n        return c * 255;\n      }),\n          _this$rgbPoints$slice4 = _slicedToArray(_this$rgbPoints$slice3, 3),\n          r = _this$rgbPoints$slice4[0],\n          g = _this$rgbPoints$slice4[1],\n          b = _this$rgbPoints$slice4[2];\n\n      return \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n    }\n  },\n  methods: {\n    // override\n    onSliderMouseDown: function onSliderMouseDown(e) {\n      if (e.target.classList.contains(CLASS_COLOR_FUNCTION_MIDDLE)) {\n        this._middleDragStart = this.parseMouseMove(e);\n      } else {\n        this._middleDragStart = null;\n      }\n\n      VRangeSlider.options.methods.onSliderMouseDown.call(this, e);\n    },\n    // override\n    onSliderClick: function onSliderClick() {// do nothing on click\n    },\n    // override\n    onMouseMove: function onMouseMove(e) {\n      var value = this.parseMouseMove(e);\n\n      if (e.type === 'mousemove') {\n        this.thumbPressed = true;\n      }\n\n      if (this._middleDragStart != null) {\n        var delta = value - this._middleDragStart;\n        this.applyRangeDelta(delta);\n      } else {\n        if (this.activeThumb === null) {\n          this.activeThumb = this.getIndexOfClosestValue(this.internalValue, value);\n        }\n\n        this.setInternalValue(value);\n      }\n    },\n    // override\n    genTrackContainer: function genTrackContainer() {\n      var _this = this;\n\n      var children = [];\n      var padding = this.isDisabled ? 10 : 0;\n      var sections = [{\n        class: \"v-slider__track-background \".concat(CLASS_COLOR_FUNCTION),\n        styles: [0, this.inputWidth[0], 0, -padding],\n        extraStyles: {\n          background: this.startBackgroundColor\n        }\n      }, {\n        class: \"v-slider__track-background \".concat(CLASS_COLOR_FUNCTION, \" \").concat(CLASS_COLOR_FUNCTION_MIDDLE),\n        styles: [this.inputWidth[0], Math.abs(this.inputWidth[1] - this.inputWidth[0]), padding, padding * -2],\n        extraStyles: {\n          background: this.filledBackgroundColor\n        }\n      }, {\n        class: \"v-slider__track-background \".concat(CLASS_COLOR_FUNCTION),\n        styles: [this.inputWidth[1], Math.abs(100 - this.inputWidth[1]), padding, -padding],\n        extraStyles: {\n          background: this.endBackgroundColor\n        }\n      }];\n      if (this.$vuetify.rtl) sections.reverse();\n      children.push.apply(children, _toConsumableArray(sections.map(function (section) {\n        return _this.$createElement('div', _objectSpread(_objectSpread({}, _this.setBackgroundColor(section.color, {\n          staticClass: section.class,\n          style: _objectSpread(_objectSpread({}, _this.getTrackStyle.apply(_this, _toConsumableArray(section.styles))), section.extraStyles)\n        })), {}, {\n          on: section.events\n        }));\n      })));\n      return this.$createElement('div', {\n        staticClass: 'v-slider__track-container',\n        ref: 'track'\n      }, children);\n    },\n    applyRangeDelta: function applyRangeDelta(delta) {\n      // this.oldValue is from VRangeSlider::onSliderMouseDown\n      var _this$oldValue = _slicedToArray(this.oldValue, 2),\n          low = _this$oldValue[0],\n          high = _this$oldValue[1]; // assumption: min <= low < high <= max\n\n\n      if (low + delta < this.min) {\n        high -= low - this.min;\n        low = this.min;\n      } else if (high + delta > this.max) {\n        low += this.max - high;\n        high = this.max;\n      } else {\n        low += delta;\n        high += delta;\n      }\n\n      this.internalValue = [low, high];\n    }\n  }\n});","map":{"version":3,"mappings":";;;;;;;;AACA;AAEA;AACA;AACA;AAEA;EACAA,6BADA;EAEAC;IACAC,gBADA;IAEAC;EAFA,CAFA;EAMAC;IACAC,oBADA,kCACA;MACA;QACA;MACA;;MACA;QAAA;MAAA;MAAA;MAAA;MAAA;MAAA;;MACA;IACA,CAPA;IAQAC,qBARA,mCAQA;MACA;QACA;MACA;;MACA;MACA;MACA;MACA;;MACA;QACA,QACA,2BADA;QAAA,QAEA,2BAFA;QAAA,QAGA,2BAHA;QAKA,wDANA,CAMA;;QACAC;MACA;;MACA;IACA,CA1BA;IA2BAC,kBA3BA,gCA2BA;MACA;QACA;MACA;;MACA;;MACA;QAAA;MAAA;MAAA;MAAA;MAAA;MAAA;;MACA;IACA;EAlCA,CANA;EA0CAC;IACA;IACAC,iBAFA,6BAEAC,CAFA,EAEA;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;;MACAC;IACA,CATA;IAUA;IACAC,aAXA,2BAWA,CACA;IACA,CAbA;IAcA;IACAC,WAfA,uBAeAH,CAfA,EAeA;MACA;;MAEA;QACA;MACA;;MAEA;QACA;QACA;MACA,CAHA,MAGA;QACA;UACA,+CACA,kBADA,EAEAI,KAFA;QAIA;;QAEA;MACA;IACA,CAnCA;IAoCA;IACAC,iBArCA,+BAqCA;MAAA;;MACA;MAEA;MACA,gBACA;QACAC,iEADA;QAEAC,4CAFA;QAGAC;UACAC;QADA;MAHA,CADA,EAQA;QACAH,0GADA;QAEAC,SACA,kBADA,EAEAG,iDAFA,EAGAC,OAHA,EAIAA,YAJA,CAFA;QAQAH;UACAC;QADA;MARA,CARA,EAoBA;QACAH,iEADA;QAEAC,SACA,kBADA,EAEAG,kCAFA,EAGAC,OAHA,EAIA,QAJA,CAFA;QAQAH;UACAC;QADA;MARA,CApBA;MAkCA;MAEAG,iDACAC;QAAA,OACA,4DACA;UACAC,0BADA;UAEAC,uCACA,oEADA,GAEAC,mBAFA;QAFA,EADA;UAQAC;QARA,GADA;MAAA,EADA;MAeA,2BACA,KADA,EAEA;QACAH,wCADA;QAEAI;MAFA,CAFA,EAMAN,QANA;IAQA,CApGA;IAqGAO,eArGA,2BAqGAC,KArGA,EAqGA;MACA;MACA;MAAA;MAAA,6BAFA,CAGA;;;MACA;QACAC;QACAC;MACA,CAHA,MAGA;QACAA;QACAD;MACA,CAHA,MAGA;QACAC;QACAD;MACA;;MACA;IACA;EApHA;AA1CA","names":["name","props","rgbPoints","range","computed","startBackgroundColor","filledBackgroundColor","colorStops","endBackgroundColor","methods","onSliderMouseDown","e","VRangeSlider","onSliderClick","onMouseMove","value","genTrackContainer","class","styles","extraStyles","background","Math","padding","children","sections","staticClass","style","section","on","ref","applyRangeDelta","delta","high","low"],"sourceRoot":"src/components","sources":["ColorFunctionSlider.vue"],"sourcesContent":["<script>\nimport { VRangeSlider } from 'vuetify/lib';\n\nconst DEFAULT_TRACK_COLOR = 'rgba(128, 128, 128, 0.2)';\nconst CLASS_COLOR_FUNCTION = 'volview__color-function';\nconst CLASS_COLOR_FUNCTION_MIDDLE = `${CLASS_COLOR_FUNCTION}_middle`;\n\nexport default VRangeSlider.extend({\n  name: 'color-function-slider',\n  props: {\n    rgbPoints: Array,\n    range: Array,\n  },\n  computed: {\n    startBackgroundColor() {\n      if (!this.rgbPoints) {\n        return DEFAULT_TRACK_COLOR;\n      }\n      const [r, g, b] = this.rgbPoints.slice(1, 4).map((c) => c * 255);\n      return `rgb(${r}, ${g}, ${b})`;\n    },\n    filledBackgroundColor() {\n      if (!this.rgbPoints) {\n        return DEFAULT_TRACK_COLOR;\n      }\n      const rangeMax = this.rgbPoints[this.rgbPoints.length - 4];\n      const rangeMin = this.rgbPoints[0];\n      const width = rangeMax - rangeMin;\n      const colorStops = [];\n      for (let i = 0; i < this.rgbPoints.length; i += 4) {\n        const [r, g, b] = [\n          this.rgbPoints[i + 1] * 255,\n          this.rgbPoints[i + 2] * 255,\n          this.rgbPoints[i + 3] * 255,\n        ];\n        const stop = ((this.rgbPoints[i] - rangeMin) / width) * 100; // in percent\n        colorStops.push(`rgba(${r}, ${g}, ${b}) ${stop.toFixed(2)}%`);\n      }\n      return `linear-gradient(to right, ${colorStops.join(', ')})`;\n    },\n    endBackgroundColor() {\n      if (!this.rgbPoints) {\n        return DEFAULT_TRACK_COLOR;\n      }\n      const end = this.rgbPoints.length;\n      const [r, g, b] = this.rgbPoints.slice(end - 3).map((c) => c * 255);\n      return `rgb(${r}, ${g}, ${b})`;\n    },\n  },\n  methods: {\n    // override\n    onSliderMouseDown(e) {\n      if (e.target.classList.contains(CLASS_COLOR_FUNCTION_MIDDLE)) {\n        this._middleDragStart = this.parseMouseMove(e);\n      } else {\n        this._middleDragStart = null;\n      }\n      VRangeSlider.options.methods.onSliderMouseDown.call(this, e);\n    },\n    // override\n    onSliderClick() {\n      // do nothing on click\n    },\n    // override\n    onMouseMove(e) {\n      const value = this.parseMouseMove(e);\n\n      if (e.type === 'mousemove') {\n        this.thumbPressed = true;\n      }\n\n      if (this._middleDragStart != null) {\n        const delta = value - this._middleDragStart;\n        this.applyRangeDelta(delta);\n      } else {\n        if (this.activeThumb === null) {\n          this.activeThumb = this.getIndexOfClosestValue(\n            this.internalValue,\n            value\n          );\n        }\n\n        this.setInternalValue(value);\n      }\n    },\n    // override\n    genTrackContainer() {\n      const children = [];\n\n      const padding = this.isDisabled ? 10 : 0;\n      const sections = [\n        {\n          class: `v-slider__track-background ${CLASS_COLOR_FUNCTION}`,\n          styles: [0, this.inputWidth[0], 0, -padding],\n          extraStyles: {\n            background: this.startBackgroundColor,\n          },\n        },\n        {\n          class: `v-slider__track-background ${CLASS_COLOR_FUNCTION} ${CLASS_COLOR_FUNCTION_MIDDLE}`,\n          styles: [\n            this.inputWidth[0],\n            Math.abs(this.inputWidth[1] - this.inputWidth[0]),\n            padding,\n            padding * -2,\n          ],\n          extraStyles: {\n            background: this.filledBackgroundColor,\n          },\n        },\n        {\n          class: `v-slider__track-background ${CLASS_COLOR_FUNCTION}`,\n          styles: [\n            this.inputWidth[1],\n            Math.abs(100 - this.inputWidth[1]),\n            padding,\n            -padding,\n          ],\n          extraStyles: {\n            background: this.endBackgroundColor,\n          },\n        },\n      ];\n\n      if (this.$vuetify.rtl) sections.reverse();\n\n      children.push(\n        ...sections.map((section) =>\n          this.$createElement('div', {\n            ...this.setBackgroundColor(section.color, {\n              staticClass: section.class,\n              style: {\n                ...this.getTrackStyle(...section.styles),\n                ...section.extraStyles,\n              },\n            }),\n            on: section.events,\n          })\n        )\n      );\n\n      return this.$createElement(\n        'div',\n        {\n          staticClass: 'v-slider__track-container',\n          ref: 'track',\n        },\n        children\n      );\n    },\n    applyRangeDelta(delta) {\n      // this.oldValue is from VRangeSlider::onSliderMouseDown\n      let [low, high] = this.oldValue;\n      // assumption: min <= low < high <= max\n      if (low + delta < this.min) {\n        high -= low - this.min;\n        low = this.min;\n      } else if (high + delta > this.max) {\n        low += this.max - high;\n        high = this.max;\n      } else {\n        low += delta;\n        high += delta;\n      }\n      this.internalValue = [low, high];\n    },\n  },\n});\n</script>\n\n<style scoped>\n.v-slider--horizontal .v-slider__track-container {\n  height: 80%;\n  display: flex;\n  align-items: center;\n}\n\n.volview__color-function_middle:hover {\n  cursor: grab;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}