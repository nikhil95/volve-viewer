{"ast":null,"code":"import '@/public/global.css';\nimport '@kitware/vtk.js/Rendering/Profiles/All';\nimport 'vue-toastification/dist/index.css';\nimport Vue from 'vue';\nimport VueCompositionAPI from '@vue/composition-api';\nimport VueToast from 'vue-toastification';\nimport { createPinia, PiniaVuePlugin } from 'pinia';\nimport vtkProxyManager from '@kitware/vtk.js/Proxy/Core/ProxyManager';\nimport vtkMapper from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkImageMapper from '@kitware/vtk.js/Rendering/Core/ImageMapper';\nimport App from './components/App.vue';\nimport vuetify from './plugins/vuetify';\nimport { DICOMIO } from './io/dicom';\nimport { FILE_READERS } from './io';\nimport { registerAllReaders } from './io/readers';\nimport proxyConfiguration from './vtk/proxy';\nimport { CorePiniaProviderPlugin } from './core/provider';\nimport ProxyWrapper from './core/proxies';\nVue.config.productionTip = false;\nVue.use(VueCompositionAPI);\nVue.use(VueToast);\nVue.use(PiniaVuePlugin); // Initialize global mapper topologies\n// polys and lines in the front\n\nvtkMapper.setResolveCoincidentTopologyToPolygonOffset();\nvtkMapper.setResolveCoincidentTopologyPolygonOffsetParameters(-3, -3);\nvtkMapper.setResolveCoincidentTopologyLineOffsetParameters(-3, -3); // image poly in the back\n\nvtkImageMapper.setResolveCoincidentTopologyToPolygonOffset();\nvtkImageMapper.setResolveCoincidentTopologyPolygonOffsetParameters(1, 1);\nregisterAllReaders(FILE_READERS);\nvar proxyManager = vtkProxyManager.newInstance({\n  proxyConfiguration: proxyConfiguration\n});\nvar dicomIO = new DICOMIO();\ndicomIO.initialize();\nvar pinia = createPinia();\npinia.use(CorePiniaProviderPlugin({\n  proxies: new ProxyWrapper(proxyManager),\n  dicomIO: dicomIO\n}));\nvar app = new Vue({\n  vuetify: vuetify,\n  proxyManager: proxyManager,\n  pinia: pinia,\n  provide: {\n    ProxyManager: proxyManager\n  },\n  render: function render(h) {\n    return h(App);\n  }\n});\napp.$mount('#app');","map":{"version":3,"names":["Vue","VueCompositionAPI","VueToast","createPinia","PiniaVuePlugin","vtkProxyManager","vtkMapper","vtkImageMapper","App","vuetify","DICOMIO","FILE_READERS","registerAllReaders","proxyConfiguration","CorePiniaProviderPlugin","ProxyWrapper","config","productionTip","use","setResolveCoincidentTopologyToPolygonOffset","setResolveCoincidentTopologyPolygonOffsetParameters","setResolveCoincidentTopologyLineOffsetParameters","proxyManager","newInstance","dicomIO","initialize","pinia","proxies","app","provide","ProxyManager","render","h","$mount"],"sources":["/home/kv/Desktop/Nikhil/VolView-4.0.0/src/main.js"],"sourcesContent":["import '@/public/global.css';\nimport '@kitware/vtk.js/Rendering/Profiles/All';\nimport 'vue-toastification/dist/index.css';\n\nimport Vue from 'vue';\nimport VueCompositionAPI from '@vue/composition-api';\nimport VueToast from 'vue-toastification';\nimport { createPinia, PiniaVuePlugin } from 'pinia';\nimport vtkProxyManager from '@kitware/vtk.js/Proxy/Core/ProxyManager';\nimport vtkMapper from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkImageMapper from '@kitware/vtk.js/Rendering/Core/ImageMapper';\n\nimport App from './components/App.vue';\nimport vuetify from './plugins/vuetify';\nimport { DICOMIO } from './io/dicom';\nimport { FILE_READERS } from './io';\nimport { registerAllReaders } from './io/readers';\nimport proxyConfiguration from './vtk/proxy';\nimport { CorePiniaProviderPlugin } from './core/provider';\nimport ProxyWrapper from './core/proxies';\n\nVue.config.productionTip = false;\n\nVue.use(VueCompositionAPI);\nVue.use(VueToast);\nVue.use(PiniaVuePlugin);\n\n// Initialize global mapper topologies\n// polys and lines in the front\nvtkMapper.setResolveCoincidentTopologyToPolygonOffset();\nvtkMapper.setResolveCoincidentTopologyPolygonOffsetParameters(-3, -3);\nvtkMapper.setResolveCoincidentTopologyLineOffsetParameters(-3, -3);\n// image poly in the back\nvtkImageMapper.setResolveCoincidentTopologyToPolygonOffset();\nvtkImageMapper.setResolveCoincidentTopologyPolygonOffsetParameters(1, 1);\n\nregisterAllReaders(FILE_READERS);\n\nconst proxyManager = vtkProxyManager.newInstance({ proxyConfiguration });\n\nconst dicomIO = new DICOMIO();\ndicomIO.initialize();\n\nconst pinia = createPinia();\npinia.use(\n  CorePiniaProviderPlugin({\n    proxies: new ProxyWrapper(proxyManager),\n    dicomIO,\n  })\n);\n\nconst app = new Vue({\n  vuetify,\n  proxyManager,\n  pinia,\n  provide: {\n    ProxyManager: proxyManager,\n  },\n  render: (h) => h(App),\n});\n\napp.$mount('#app');\n"],"mappings":"AAAA,OAAO,qBAAP;AACA,OAAO,wCAAP;AACA,OAAO,mCAAP;AAEA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,OAA5C;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AAEA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,YAAT,QAA6B,MAA7B;AACA,SAASC,kBAAT,QAAmC,cAAnC;AACA,OAAOC,kBAAP,MAA+B,aAA/B;AACA,SAASC,uBAAT,QAAwC,iBAAxC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEAf,GAAG,CAACgB,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AAEAjB,GAAG,CAACkB,GAAJ,CAAQjB,iBAAR;AACAD,GAAG,CAACkB,GAAJ,CAAQhB,QAAR;AACAF,GAAG,CAACkB,GAAJ,CAAQd,cAAR,E,CAEA;AACA;;AACAE,SAAS,CAACa,2CAAV;AACAb,SAAS,CAACc,mDAAV,CAA8D,CAAC,CAA/D,EAAkE,CAAC,CAAnE;AACAd,SAAS,CAACe,gDAAV,CAA2D,CAAC,CAA5D,EAA+D,CAAC,CAAhE,E,CACA;;AACAd,cAAc,CAACY,2CAAf;AACAZ,cAAc,CAACa,mDAAf,CAAmE,CAAnE,EAAsE,CAAtE;AAEAR,kBAAkB,CAACD,YAAD,CAAlB;AAEA,IAAMW,YAAY,GAAGjB,eAAe,CAACkB,WAAhB,CAA4B;EAAEV,kBAAkB,EAAlBA;AAAF,CAA5B,CAArB;AAEA,IAAMW,OAAO,GAAG,IAAId,OAAJ,EAAhB;AACAc,OAAO,CAACC,UAAR;AAEA,IAAMC,KAAK,GAAGvB,WAAW,EAAzB;AACAuB,KAAK,CAACR,GAAN,CACEJ,uBAAuB,CAAC;EACtBa,OAAO,EAAE,IAAIZ,YAAJ,CAAiBO,YAAjB,CADa;EAEtBE,OAAO,EAAPA;AAFsB,CAAD,CADzB;AAOA,IAAMI,GAAG,GAAG,IAAI5B,GAAJ,CAAQ;EAClBS,OAAO,EAAPA,OADkB;EAElBa,YAAY,EAAZA,YAFkB;EAGlBI,KAAK,EAALA,KAHkB;EAIlBG,OAAO,EAAE;IACPC,YAAY,EAAER;EADP,CAJS;EAOlBS,MAAM,EAAE,gBAACC,CAAD;IAAA,OAAOA,CAAC,CAACxB,GAAD,CAAR;EAAA;AAPU,CAAR,CAAZ;AAUAoB,GAAG,CAACK,MAAJ,CAAW,MAAX"},"metadata":{},"sourceType":"module"}